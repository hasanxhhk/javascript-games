{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\Hasan\\\\react\\\\my-world\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport Navbar from './Components/Navbar.js';\nimport TextForm from './Components/TextForm.js';\nimport About from './Components/About.js';\nimport Alert from './Components/Alert.js';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [mode, setMode] = useState('light');\n  const [alert, setAlert] = useState(null);\n  const [btnStyle, setBtnStyle] = useState({\n    backgroundColor: ''\n  });\n  const showAlert = (messege, type) => {\n    setAlert({\n      msg: messege,\n      type: type\n    });\n    setTimeout(() => {\n      setAlert(null);\n    }, 1500);\n  };\n  const toggleMode = () => {\n    if (mode === 'light') {\n      setMode('dark');\n      document.body.style.backgroundColor = '#042743';\n      showAlert('Dark mode has been enabled', 'success');\n    } else {\n      setMode('light');\n      document.body.style.backgroundColor = 'white';\n      showAlert('Light mode has been enabled', 'success');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      title: \"MYNAV\",\n      home: \"Home\",\n      mode: mode,\n      toggleMode: toggleMode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Alert, {\n      alert: alert\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container my-3\",\n      children: /*#__PURE__*/_jsxDEV(TextForm, {\n        heading: \"Enter your text\",\n        mode: mode,\n        toggleMode: toggleMode,\n        showAlert: showAlert\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(About, {\n      mode: mode,\n      toggleMode: toggleMode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"Cg0W02tEAOGgt4tyGMZkxYcwWpc=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Navbar","TextForm","About","Alert","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","mode","setMode","alert","setAlert","btnStyle","setBtnStyle","backgroundColor","showAlert","messege","type","msg","setTimeout","toggleMode","document","body","style","children","title","home","fileName","_jsxFileName","lineNumber","columnNumber","className","heading","_c","$RefreshReg$"],"sources":["C:/Users/ASUS/Desktop/Hasan/react/my-world/src/App.js"],"sourcesContent":["\nimport './App.css';\nimport Navbar from './Components/Navbar.js';\nimport TextForm from './Components/TextForm.js';\nimport About from './Components/About.js';\nimport Alert from './Components/Alert.js'\nimport { useState } from 'react';\n\nfunction App() {\n  const[mode , setMode] = useState('light')\n  const[alert , setAlert] = useState(null)\n  const [btnStyle , setBtnStyle] = useState({backgroundColor : ''})\n\n  const showAlert = (messege, type)=>{\n    setAlert({\n      msg:messege,\n      type:type\n    })\n    setTimeout(() => {\n      setAlert (null);\n    }, 1500);\n  }\n  const toggleMode = ()=>{\n    if(mode === 'light'){\n      setMode('dark')\n      document.body.style.backgroundColor='#042743'\n      showAlert('Dark mode has been enabled','success')\n    }else{\n      setMode('light')\n      document.body.style.backgroundColor='white'\n      showAlert('Light mode has been enabled','success')\n    }\n  }\n  return (\n    <>\n      <Navbar title=\"MYNAV\" home=\"Home\" mode={mode} toggleMode={toggleMode}/>\n      {/* <Alert/> */}\n      <Alert alert={alert}/>\n      <div className='container my-3'>\n        <TextForm heading=\"Enter your text\" mode={mode} toggleMode={toggleMode} showAlert={showAlert} />\n      </div>\n      <About mode={mode} toggleMode={toggleMode}></About>\n    </>\n  );\n}\n\nexport default App;"],"mappings":";;AACA,OAAO,WAAW;AAClB,OAAOA,MAAM,MAAM,wBAAwB;AAC3C,OAAOC,QAAQ,MAAM,0BAA0B;AAC/C,OAAOC,KAAK,MAAM,uBAAuB;AACzC,OAAOC,KAAK,MAAM,uBAAuB;AACzC,SAASC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEjC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAK,CAACC,IAAI,EAAGC,OAAO,CAAC,GAAGR,QAAQ,CAAC,OAAO,CAAC;EACzC,MAAK,CAACS,KAAK,EAAGC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACW,QAAQ,EAAGC,WAAW,CAAC,GAAGZ,QAAQ,CAAC;IAACa,eAAe,EAAG;EAAE,CAAC,CAAC;EAEjE,MAAMC,SAAS,GAAGA,CAACC,OAAO,EAAEC,IAAI,KAAG;IACjCN,QAAQ,CAAC;MACPO,GAAG,EAACF,OAAO;MACXC,IAAI,EAACA;IACP,CAAC,CAAC;IACFE,UAAU,CAAC,MAAM;MACfR,QAAQ,CAAE,IAAI,CAAC;IACjB,CAAC,EAAE,IAAI,CAAC;EACV,CAAC;EACD,MAAMS,UAAU,GAAGA,CAAA,KAAI;IACrB,IAAGZ,IAAI,KAAK,OAAO,EAAC;MAClBC,OAAO,CAAC,MAAM,CAAC;MACfY,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACT,eAAe,GAAC,SAAS;MAC7CC,SAAS,CAAC,4BAA4B,EAAC,SAAS,CAAC;IACnD,CAAC,MAAI;MACHN,OAAO,CAAC,OAAO,CAAC;MAChBY,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACT,eAAe,GAAC,OAAO;MAC3CC,SAAS,CAAC,6BAA6B,EAAC,SAAS,CAAC;IACpD;EACF,CAAC;EACD,oBACEZ,OAAA,CAAAE,SAAA;IAAAmB,QAAA,gBACErB,OAAA,CAACN,MAAM;MAAC4B,KAAK,EAAC,OAAO;MAACC,IAAI,EAAC,MAAM;MAAClB,IAAI,EAAEA,IAAK;MAACY,UAAU,EAAEA;IAAW;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eAEvE3B,OAAA,CAACH,KAAK;MAACU,KAAK,EAAEA;IAAM;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eACtB3B,OAAA;MAAK4B,SAAS,EAAC,gBAAgB;MAAAP,QAAA,eAC7BrB,OAAA,CAACL,QAAQ;QAACkC,OAAO,EAAC,iBAAiB;QAACxB,IAAI,EAAEA,IAAK;QAACY,UAAU,EAAEA,UAAW;QAACL,SAAS,EAAEA;MAAU;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7F,CAAC,eACN3B,OAAA,CAACJ,KAAK;MAACS,IAAI,EAAEA,IAAK;MAACY,UAAU,EAAEA;IAAW;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA,eACnD,CAAC;AAEP;AAACvB,EAAA,CApCQD,GAAG;AAAA2B,EAAA,GAAH3B,GAAG;AAsCZ,eAAeA,GAAG;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}