{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\Hasan\\\\react\\\\my-world\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport Navbar from './Components/Navbar.js';\nimport TextForm from './Components/TextForm.js';\nimport About from './Components/About.js';\nimport Alert from './Components/Alert.js';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [mode, setMode] = useState('light');\n  const [alert, setAlert] = useState(null);\n  // const [btnStyle , setBtnStyle] = useState({backgroundColor : ''})\n\n  const showAlert = (messege, type) => {\n    setAlert({\n      msg: messege,\n      type: type\n    });\n    setTimeout(() => {\n      setAlert(null);\n    }, 1500);\n  };\n  const toDarkMode = () => {\n    if (mode === 'light' || 'red' || 'blue') {\n      setMode('dark');\n      document.body.style.backgroundColor = '#3C3D37';\n      showAlert('Dark mode has been enabled', 'success');\n    }\n  };\n  const toRedMode = () => {\n    if (mode === 'light' || 'Dark' || 'blue') {\n      setMode('red');\n      document.body.style.backgroundColor = 'red';\n      showAlert('Red mode has been enabled', 'success');\n    }\n  };\n  const toBlueMode = () => {\n    if (mode === 'light' || 'Dark' || 'red') {\n      setMode('blue');\n      document.body.style.backgroundColor = '#042743';\n      showAlert('Red mode has been enabled', 'success');\n    }\n  };\n  const toLightMode = () => {\n    if (mode === 'red' || 'Dark' || 'blue') {\n      setMode('light');\n      document.body.style.backgroundColor = 'white';\n      showAlert('Light mode has been enabled', 'success');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      title: \"MYNAV\",\n      home: \"Home\",\n      mode: mode,\n      toLightMode: toLightMode,\n      toBlueMode: toBlueMode,\n      toRedMode: toRedMode,\n      toDarkMode: toDarkMode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Alert, {\n      alert: alert\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container my-3\",\n      children: /*#__PURE__*/_jsxDEV(TextForm, {\n        heading: \"Enter your text\",\n        mode: mode,\n        toLightMode: toLightMode,\n        toBlueMode: toBlueMode,\n        toRedMode: toRedMode,\n        toDarkMode: toDarkMode,\n        showAlert: showAlert\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(About, {\n      mode: mode,\n      toLightMode: toLightMode,\n      toBlueMode: toBlueMode,\n      toRedMode: toRedMode,\n      toDarkMode: toDarkMode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"+Zcsybk6GniOPVEK/uE+SWWodnI=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Navbar","TextForm","About","Alert","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","mode","setMode","alert","setAlert","showAlert","messege","type","msg","setTimeout","toDarkMode","document","body","style","backgroundColor","toRedMode","toBlueMode","toLightMode","children","title","home","fileName","_jsxFileName","lineNumber","columnNumber","className","heading","_c","$RefreshReg$"],"sources":["C:/Users/ASUS/Desktop/Hasan/react/my-world/src/App.js"],"sourcesContent":["\nimport './App.css';\nimport Navbar from './Components/Navbar.js';\nimport TextForm from './Components/TextForm.js';\nimport About from './Components/About.js';\nimport Alert from './Components/Alert.js'\nimport { useState } from 'react';\n\nfunction App() {\n  const[mode , setMode] = useState('light')\n  const[alert , setAlert] = useState(null)\n  // const [btnStyle , setBtnStyle] = useState({backgroundColor : ''})\n\n  const showAlert = (messege, type)=>{\n    setAlert({\n      msg:messege,\n      type:type\n    })\n    setTimeout(() => {\n      setAlert (null);\n    }, 1500);\n  }\n  const toDarkMode = ()=>{\n    if(mode === 'light' || 'red' || 'blue'){\n      setMode('dark')\n      document.body.style.backgroundColor='#3C3D37'\n      showAlert('Dark mode has been enabled','success')\n    }\n  }\n  const toRedMode = ()=>{\n    if(mode === 'light' || 'Dark' || 'blue'){\n      setMode('red')\n      document.body.style.backgroundColor='red'\n      showAlert('Red mode has been enabled','success')\n    }\n}\n  const toBlueMode = ()=>{\n    if(mode === 'light' || 'Dark' || 'red'){\n      setMode('blue')\n      document.body.style.backgroundColor='#042743'\n      showAlert('Red mode has been enabled','success')\n    }\n}\n  const toLightMode = ()=>{\n    if(mode === 'red' || 'Dark' || 'blue'){\n      setMode('light')\n      document.body.style.backgroundColor='white'\n      showAlert('Light mode has been enabled','success')\n    }\n}\n  return (\n    <>\n      <Navbar title=\"MYNAV\" home=\"Home\" mode={mode} toLightMode={toLightMode} toBlueMode={toBlueMode} toRedMode={toRedMode} toDarkMode={toDarkMode}/>\n      {/* <Alert/> */}\n      <Alert alert={alert}/>\n      <div className='container my-3'>\n        <TextForm heading=\"Enter your text\" mode={mode} toLightMode={toLightMode} toBlueMode={toBlueMode} toRedMode={toRedMode} toDarkMode={toDarkMode} showAlert={showAlert} />\n      </div>\n      <About mode={mode} toLightMode={toLightMode} toBlueMode={toBlueMode} toRedMode={toRedMode} toDarkMode={toDarkMode}></About>\n    </>\n  );\n}\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}