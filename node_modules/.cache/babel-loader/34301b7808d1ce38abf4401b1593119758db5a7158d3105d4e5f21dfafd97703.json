{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\Hasan\\\\react\\\\my-world\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport Navbar from './Components/Navbar.js';\nimport TextForm from './Components/TextForm.js';\nimport About from './Components/About.js';\nimport Alert from './Components/Alert.js';\nimport { useState } from 'react';\nimport { BrowserRouter as Router, Route, Switch, Routes } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [mode, setMode] = useState('light');\n  const [alert, setAlert] = useState(null);\n  // const [btnStyle , setBtnStyle] = useState({backgroundColor : ''})\n\n  const showAlert = (messege, type) => {\n    setAlert({\n      msg: messege,\n      type: type\n    });\n    setTimeout(() => {\n      setAlert(null);\n    }, 1500);\n  };\n  const toDarkMode = () => {\n    if (mode === 'light' || 'red' || 'blue') {\n      setMode('dark');\n      document.body.style.backgroundColor = '#3C3D37';\n      showAlert('Dark mode has been enabled', 'success');\n    }\n  };\n  const toRedMode = () => {\n    if (mode === 'light' || 'Dark' || 'blue') {\n      setMode('red');\n      document.body.style.backgroundColor = '#982B1C';\n      showAlert('Red mode has been enabled', 'success');\n    }\n  };\n  const toBlueMode = () => {\n    if (mode === 'light' || 'Dark' || 'red') {\n      setMode('blue');\n      document.body.style.backgroundColor = '#042743';\n      showAlert('Blue mode has been enabled', 'success');\n    }\n  };\n  const toLightMode = () => {\n    if (mode === 'red' || 'Dark' || 'blue') {\n      setMode('light');\n      document.body.style.backgroundColor = '#E0E5B6';\n      showAlert('Light mode has been enabled', 'success');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Router, {\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {\n        title: \"MYNAV\",\n        home: \"Home\",\n        mode: mode,\n        toLightMode: toLightMode,\n        toBlueMode: toBlueMode,\n        toRedMode: toRedMode,\n        toDarkMode: toDarkMode\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container my-3\",\n        children: /*#__PURE__*/_jsxDEV(TextForm, {\n          heading: \"Enter your text\",\n          mode: mode,\n          toLightMode: toLightMode,\n          toBlueMode: toBlueMode,\n          toRedMode: toRedMode,\n          toDarkMode: toDarkMode,\n          showAlert: showAlert\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/about\",\n          element: /*#__PURE__*/_jsxDEV(About, {\n            mode: mode,\n            toLightMode: toLightMode,\n            toBlueMode: toBlueMode,\n            toRedMode: toRedMode,\n            toDarkMode: toDarkMode\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 20\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/alert\",\n          element: /*#__PURE__*/_jsxDEV(Alert, {\n            alert: alert\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 20\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(App, \"+Zcsybk6GniOPVEK/uE+SWWodnI=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Navbar","TextForm","About","Alert","useState","BrowserRouter","Router","Route","Switch","Routes","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","mode","setMode","alert","setAlert","showAlert","messege","type","msg","setTimeout","toDarkMode","document","body","style","backgroundColor","toRedMode","toBlueMode","toLightMode","children","title","home","fileName","_jsxFileName","lineNumber","columnNumber","className","heading","path","element","_c","$RefreshReg$"],"sources":["C:/Users/ASUS/Desktop/Hasan/react/my-world/src/App.js"],"sourcesContent":["\nimport './App.css';\nimport Navbar from './Components/Navbar.js';\nimport TextForm from './Components/TextForm.js';\nimport About from './Components/About.js';\nimport Alert from './Components/Alert.js'\nimport { useState } from 'react';\nimport { BrowserRouter as Router, Route, Switch, Routes } from 'react-router-dom';\n\n\nfunction App() {\n  const[mode , setMode] = useState('light')\n  const[alert , setAlert] = useState(null)\n  // const [btnStyle , setBtnStyle] = useState({backgroundColor : ''})\n\n  const showAlert = (messege, type)=>{\n    setAlert({\n      msg:messege,\n      type:type\n    })\n    setTimeout(() => {\n      setAlert (null);\n    }, 1500);\n  }\n  const toDarkMode = ()=>{\n    if(mode === 'light' || 'red' || 'blue'){\n      setMode('dark')\n      document.body.style.backgroundColor='#3C3D37'\n\n      showAlert('Dark mode has been enabled','success')\n    }\n  }\n  const toRedMode = ()=>{\n    if(mode === 'light' || 'Dark' || 'blue'){\n      setMode('red')\n      document.body.style.backgroundColor='#982B1C'\n      showAlert('Red mode has been enabled','success')\n    }\n}\n  const toBlueMode = ()=>{\n    if(mode === 'light' || 'Dark' || 'red'){\n      setMode('blue')\n      document.body.style.backgroundColor='#042743'\n      showAlert('Blue mode has been enabled','success')\n    }\n}\n  const toLightMode = ()=>{\n    if(mode === 'red' || 'Dark' || 'blue'){\n      setMode('light')\n      document.body.style.backgroundColor='#E0E5B6'\n      showAlert('Light mode has been enabled','success')\n    }\n}\n  return (\n    <>\n      <Router>\n      <Navbar title=\"MYNAV\" home=\"Home\" mode={mode} toLightMode={toLightMode} toBlueMode={toBlueMode} toRedMode={toRedMode} toDarkMode={toDarkMode}/>\n      <div className='container my-3'>\n              <TextForm heading=\"Enter your text\" mode={mode} toLightMode={toLightMode} toBlueMode={toBlueMode} toRedMode={toRedMode} toDarkMode={toDarkMode} showAlert={showAlert} />\n      </div>\n        <Routes>\n          <Route\n          path=\"/about\"\n          element={<About mode={mode} toLightMode={toLightMode} toBlueMode={toBlueMode} toRedMode={toRedMode} toDarkMode={toDarkMode}/>}\n           /> \n          <Route\n          path=\"/alert\"\n          element={<Alert alert={alert}/>}\n           /> \n        </Routes>\n      </Router>\n    </>\n  );\n}\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}