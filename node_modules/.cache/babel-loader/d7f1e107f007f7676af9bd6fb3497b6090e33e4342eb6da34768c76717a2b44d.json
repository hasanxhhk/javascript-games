{"ast":null,"code":"import'./App.css';import Navbar from'./Components/Navbar.js';import TextForm from'./Components/TextForm.js';import About from'./Components/About.js';import Alert from'./Components/Alert.js';import{useState}from'react';import{BrowserRouter as Router,Route,Switch,Routes}from'react-router-dom';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";function App(){const[mode,setMode]=useState('light');const[alert,setAlert]=useState(null);// const [btnStyle , setBtnStyle] = useState({backgroundColor : ''})\nconst showAlert=(messege,type)=>{setAlert({msg:messege,type:type});setTimeout(()=>{setAlert(null);},3000);};const toDarkMode=()=>{if(mode==='light'||'red'||'blue'){setMode('dark');document.body.style.backgroundColor='#3C3D37';showAlert('Dark mode has been enabled','success');}};const toRedMode=()=>{if(mode==='light'||'Dark'||'blue'){setMode('red');document.body.style.backgroundColor='#982B1C';showAlert('Red mode has been enabled','success');}};const toBlueMode=()=>{if(mode==='light'||'Dark'||'red'){setMode('blue');document.body.style.backgroundColor='#042743';showAlert('Blue mode has been enabled','success');}};const toLightMode=()=>{if(mode==='red'||'Dark'||'blue'){setMode('light');document.body.style.backgroundColor='#E0E5B6';showAlert('Light mode has been enabled','success');}};return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsxs(Router,{children:[/*#__PURE__*/_jsx(Navbar,{title:\"MYNAV\",home:\"Home\",mode:mode,toLightMode:toLightMode,toBlueMode:toBlueMode,toRedMode:toRedMode,toDarkMode:toDarkMode}),/*#__PURE__*/_jsx(Alert,{alert:alert}),/*#__PURE__*/_jsxs(Routes,{children:[/*#__PURE__*/_jsx(Route,{exact:true,path:\"/about\",element:/*#__PURE__*/_jsx(About,{mode:mode,toLightMode:toLightMode,toBlueMode:toBlueMode,toRedMode:toRedMode,toDarkMode:toDarkMode})}),/*#__PURE__*/_jsx(Route,{exact:true,path:\"/\",element:/*#__PURE__*/_jsx(\"div\",{className:\"container my-3\",children:/*#__PURE__*/_jsx(TextForm,{heading:\"Enter your text\",mode:mode,toLightMode:toLightMode,toBlueMode:toBlueMode,toRedMode:toRedMode,toDarkMode:toDarkMode,showAlert:showAlert})})})]})]})});}export default App;","map":{"version":3,"names":["Navbar","TextForm","About","Alert","useState","BrowserRouter","Router","Route","Switch","Routes","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","App","mode","setMode","alert","setAlert","showAlert","messege","type","msg","setTimeout","toDarkMode","document","body","style","backgroundColor","toRedMode","toBlueMode","toLightMode","children","title","home","exact","path","element","className","heading"],"sources":["C:/Users/ASUS/Desktop/Hasan/react/my-world/src/App.js"],"sourcesContent":["\nimport './App.css';\nimport Navbar from './Components/Navbar.js';\nimport TextForm from './Components/TextForm.js';\nimport About from './Components/About.js';\nimport Alert from './Components/Alert.js'\nimport { useState } from 'react';\nimport { BrowserRouter as Router, Route, Switch, Routes } from 'react-router-dom';\n\n\nfunction App() {\n  const[mode , setMode] = useState('light')\n  const[alert , setAlert] = useState(null)\n  // const [btnStyle , setBtnStyle] = useState({backgroundColor : ''})\n\n  const showAlert = (messege, type)=>{\n    setAlert({\n      msg:messege,\n      type:type\n    })\n    setTimeout(() => {\n      setAlert (null);\n    }, 3000);\n  }\n  const toDarkMode = ()=>{\n    if(mode === 'light' || 'red' || 'blue'){\n      setMode('dark')\n      document.body.style.backgroundColor='#3C3D37'\n\n      showAlert('Dark mode has been enabled','success')\n    }\n  }\n  const toRedMode = ()=>{\n    if(mode === 'light' || 'Dark' || 'blue'){\n      setMode('red')\n      document.body.style.backgroundColor='#982B1C'\n      showAlert('Red mode has been enabled','success')\n    }\n}\n  const toBlueMode = ()=>{\n    if(mode === 'light' || 'Dark' || 'red'){\n      setMode('blue')\n      document.body.style.backgroundColor='#042743'\n      showAlert('Blue mode has been enabled','success')\n    }\n}\n  const toLightMode = ()=>{\n    if(mode === 'red' || 'Dark' || 'blue'){\n      setMode('light')\n      document.body.style.backgroundColor='#E0E5B6'\n      showAlert('Light mode has been enabled','success')\n    }\n}\n  return (\n    <>\n      <Router>\n      <Navbar title=\"MYNAV\" home=\"Home\" mode={mode} toLightMode={toLightMode} toBlueMode={toBlueMode} toRedMode={toRedMode} toDarkMode={toDarkMode}/>\n      <Alert alert={alert}/>\n        <Routes>\n          <Route\n          exact path=\"/about\"\n          element={<About mode={mode} toLightMode={toLightMode} toBlueMode={toBlueMode} toRedMode={toRedMode} toDarkMode={toDarkMode}/>}\n           /> \n          <Route\n          exact path=\"/\"\n          element={<div className='container my-3'>\n            <TextForm heading=\"Enter your text\" mode={mode} toLightMode={toLightMode} toBlueMode={toBlueMode} toRedMode={toRedMode} toDarkMode={toDarkMode} showAlert={showAlert} />\n            </div>}\n           /> \n           \n        </Routes>\n      </Router>\n    </>\n  );\n}\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}